{"version":3,"sources":["../../src/controllers/learnJS.js"],"names":["courseInfo","catelog","updateCatelog","words","updateWords","homeworkInfo","homework","updateHomework","config","catelogContent","require","req","res","json","result","code","body","readFile","wordsFilePath","err","message","unlinkSync","writeFile","spaces","readdir","homeworkPath","files","console","log","homeworkInfoList","forEach","item","index","file","readFileSync","push","url","count","length","id","params","filePath","homeworks","next"],"mappings":"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","file":"learnJS.js","sourcesContent":["import * as config from '../config';\nimport fs from 'fs';\nimport jsonfile from 'jsonfile';\n\nlet catelogContent = require('../public/content/catelog');\n\nexport function courseInfo(req, res) {\n  res.json({\n    result: {\n      code: 1,\n      courseInfo: config.courseInfo\n    }\n  });\n}\n\nexport function catelog(req, res) {\n  res.json({ result: { code: 1, catelog: catelogContent } });\n}\n\nexport function updateCatelog(req, res) {\n  var catelog = req.body.catelog;\n  // TODO: 不用数据库，该如何对文章分类呢？\n}\n\nexport function words(req, res) {\n  jsonfile.readFile(config.wordsFilePath, function(err, words) {\n    if (err) {\n      res.json({ result: { code: 0, message: '获取数据失败' } });\n      return;\n    }\n\n    res.json({ result: { code: 1, words } });\n  });\n}\n\nexport function updateWords(req, res) {\n  const words = req.body.words;\n\n  fs.unlinkSync(config.wordsFilePath);\n\n  jsonfile.writeFile(config.wordsFilePath, words, { spaces: 2 }, function(err) {\n    if (err) {\n      res.json({ result: { code: 0, message: '更新失败' } });\n    } else {\n      res.json({ result: { code: 1, message: '更新成功' } });\n    }\n  });\n}\n\nexport function homeworkInfo(req, res) {\n  fs.readdir(config.homeworkPath, function(err, files) {\n    console.log(files);\n    if (err) {\n      res.json({ result: { code: 0, message: '获取失败' } });\n    } else {\n      var homeworkInfoList = [];\n      files.forEach((item, index) => {\n        let file = jsonfile.readFileSync(\n          config.homeworkPath + 'lesson' + (index + 1) + '.json'\n        );\n        homeworkInfoList.push({\n          url: 'homework/' + (index + 1),\n          count: file.length\n        });\n      });\n\n      res.json({ result: { code: 1, homeworkInfo: homeworkInfoList } });\n    }\n  });\n}\n\nexport function homework(req, res) {\n  const id = req.params.id;\n  var filePath = config.homeworkPath + '/lesson' + id + '.json';\n\n  jsonfile.readFile(filePath, function(err, homeworks) {\n    if (err) {\n      res.json({ result: { code: 0, message: '获取数据失败' } });\n    } else {\n      res.json({ result: { code: 1, homeworks } });\n    }\n  });\n}\n\nexport function updateHomework(req, res, next) {\n  // TODO:\n}\n"]}