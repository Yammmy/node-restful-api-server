{"version":3,"sources":["../../src/proxy/user.js"],"names":["find","findOne","findFullOne","findByNames","findOneById","findOneDetailById","findOneByName","findByIds","increaseScore","create","update","ResultMsg","baseFields","detailFields","authFields","appId","conditions","options","Error","NO_APP_ID","NOT_OBJECT","query","select","setOptions","exec","names","Array","isArray","NOT_ARRAY","loginname","$in","id","NO_ID","_id","name","NOT_STRING","RegExp","ids","authorId","topicCount","replyCount","data","score","topic_count","reply_count","findByIdAndUpdate","$inc","passwordHash","email","avatar","active","user","pass","accessToken","v4","save","$set"],"mappings":"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","file":"user.js","sourcesContent":["import uuid from 'node-uuid';\nimport * as ResultMsg from '../constrants/ResultMsg';\nimport { UserModel } from '../models';\n\nconst baseFields =\n  'name loginname email weixin qq avatar role is_star create_at';\nconst detailFields =\n  'name loginname weixin qq avatar accessToken role email url profile_image_url location signature profile is_star';\nconst authFields = 'name loginname email retrieveKey, retrieveTime';\n\nexport function find(appId, conditions, options) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (typeof conditions !== 'object') throw new Error(ResultMsg.NOT_OBJECT);\n  if (typeof options !== 'object') options = null;\n  conditions.appId = appId;\n  const query = UserModel.find(conditions)\n    .select(baseFields)\n    .setOptions(options);\n  return query.exec();\n}\n\nexport function findOne(appId, conditions, options) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (typeof conditions !== 'object') throw new Error(ResultMsg.NOT_OBJECT);\n  if (typeof options !== 'object') options = null;\n  conditions.appId = appId;\n  const query = UserModel.findOne(conditions)\n    .select(baseFields)\n    .setOptions(options);\n  return query.exec();\n}\n\nexport function findFullOne(appId, conditions, options) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (typeof conditions !== 'object') throw new Error(ResultMsg.NOT_OBJECT);\n  if (typeof options !== 'object') options = null;\n  conditions.appId = appId;\n  const query = UserModel.findOne(conditions).setOptions(options);\n  return query.exec();\n}\n\nexport function findByNames(appId, names) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (typeof names !== 'object') throw new Error(ResultMsg.NOT_OBJECT);\n  if (!Array.isArray(names)) throw new Error(ResultMsg.NOT_ARRAY);\n  const query = UserModel.find({\n    appId: appId,\n    loginname: { $in: names }\n  }).select(baseFields);\n  return query.exec();\n}\n\nexport function findOneById(appId, id) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (typeof id !== 'string' && typeof id !== 'object')\n    throw new Error(ResultMsg.NO_ID);\n  const query = UserModel.findOne({ appId: appId, _id: id }).select(baseFields);\n  return query.exec();\n}\n\nexport function findOneDetailById(appId, id) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (typeof id !== 'string' && typeof id !== 'object')\n    throw new Error(ResultMsg.NO_ID);\n  const query = UserModel.findOne({ appId: appId, _id: id }).select(\n    detailFields\n  );\n  return query.exec();\n}\n\nexport function findOneByName(appId, name) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (typeof name !== 'string') throw new Error(ResultMsg.NOT_STRING);\n  const query = UserModel.findOne({\n    appId: appId,\n    loginname: new RegExp(`^${name}$`, 'i')\n  }).select(baseFields);\n  return query.exec();\n}\n\nexport function findByIds(appId, ids) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (typeof ids !== 'object') throw new Error(ResultMsg.NOT_OBJECT);\n  if (!Array.isArray(ids)) throw new Error(ResultMsg.NOT_ARRAY);\n  const query = UserModel.find({ appId: appId, _id: { $in: ids } }).select(\n    baseFields\n  );\n  return query.exec();\n}\n\nexport function increaseScore(appId, authorId, { topicCount, replyCount }) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (typeof authorId !== 'string' && typeof authorId !== 'object')\n    throw new Error(ResultMsg.NO_ID);\n  topicCount = !topicCount ? 0 : topicCount;\n  replyCount = !replyCount ? 0 : replyCount;\n\n  const data = {};\n  if (topicCount != 0) {\n    data.score = 5;\n    data.topic_count = 1;\n  }\n\n  if (replyCount != 0) {\n    data.score = 5;\n    data.reply_count = 1;\n  }\n\n  const query = UserModel.findByIdAndUpdate(authorId, { $inc: data });\n  return query.exec();\n}\n\nexport function create(\n  appId,\n  { loginname, passwordHash, email, avatar, active }\n) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (\n    typeof loginname !== 'string' ||\n    typeof passwordHash !== 'string' ||\n    typeof email !== 'string'\n  ) {\n    throw new Error(ResultMsg.NOT_STRING);\n  }\n\n  const user = new UserModel();\n  user.appId = appId;\n  user.name = loginname;\n  user.loginname = loginname;\n  user.pass = passwordHash;\n  user.email = email;\n  user.avatar = avatar || '';\n  user.active = active || false;\n  user.accessToken = uuid.v4();\n\n  return user.save();\n}\n\nexport function update(appId, id, data) {\n  if (typeof appId !== 'string') throw new Error(ResultMsg.NO_APP_ID);\n  if (typeof id !== 'string' && typeof id !== 'object')\n    throw new Error(ResultMsg.NO_ID);\n  if (typeof data !== 'object') throw new Error(ResultMsg.NOT_OBJECT);\n  const query = UserModel.findByIdAndUpdate(id, { $set: data });\n  return query.exec();\n}\n"]}